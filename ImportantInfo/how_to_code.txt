-------
JavaFX
-------

ClientUI, ServerUI
שתי המלקות האלה משמשות גם כמחלקות להרצה עם מיין וגם כמנהלי תצוגה
בשביל להחליף חלון יש לקרוא למטודות
ClientUI.changeScene("ConnectToHost");

שינוי של החלון חייב להתבצע ממחלקות שרצות בJavaFX Thread, אצלנו זה רק קונטרולרים

אם אתם רוצים ליצור חלון חדש, תדאגו שהשם של ה-FXML והשם של הקונטרולר זהים
ובקובץ FXML יש שדה מתאים למחלקת קונטרולר, לדוגמה:
fx:controller="gui.ConnectToHost"

כשכותבים חלון חדש אין צורך לגעת בכלום חוץ מהקונטרולר שלו וה-FXML שלו

אם מחלקה אחרת צריכה לגשת לקונטרולר של החלון הנוכחי בשביל להריץ מטודות שם אפשר להשתמש במטודה
ClientUI.getCurrentController()
אבל צריך לשים לב שסדר הפעולות הוא נכון ואתם לא מקבלים את הקונטרולר של החלון הקודם, או החלון הבא

--------
Commands
--------

גם ללקוח וגם לשרת יש אפשרות להריץ פקודות ממחלקות מוגדרות מראש, כל המחלקות האלה נמצאות
בחבילה command והן יורשות ממחלקה Command, יש להן מטודה אחת execute שמורצת לבד כאשר
שרת או לקוח שולחים הודעה להריץ את הפקודות בצד השני.

אצל השרת, ערך שחוזר מהפקודות תמיד יהיה הודעה לשלוח חזרה ללקוח כתשובה
אצל הלקוח, ערך שחוזר מהפקודות תמיד יהיה שמור ב-
ClientHandler.getCommandReturn()

שימו לב שאצל הלקוח יש פקודה ReturnParam כל מה שהיא עושה זה להחזיר את האובייקט שנשלח מהשרת

-------------
Communication
-------------

ניהול תקשורת בין שרת ללקוח במודל בקשה-תשובה, הלקוח שולח בקשה לשרת והשרת תמיד מחזיר תשובה
כל ההדעות הנשלחות חייבות להיות אובייקט Message. אובייקט זה מכיל שדה מחרוזת לפקודה ושדה אובייקט כללי לפרמטרים
שני השדות חייבים להיות מלאים ואסור שהם יהיו null

דוגמא לשליחת הודעה:
Message msg = new Message("GetOrderByNumber", orderNum);
ClientHandler.request(msg);

ההודעה הזאת תגיד לשרת להריץ את הפקודה GetOrderByNumber עם הפרמטר orderNum
אחרי שליחת הודעה התשובה, השרת שולח תשובה באותו סגנון ויכול לריץ פקודות אצל הלקוח
בדוגמה זאת השרת יכול להחזיר תשובה כזאת אחרי הרצת המחלקה GetOrderByNumber:
Message("ReturnParam", order)

הלקוח מקבל את התשובה מריץ את הפקודה ReturnParam ושומר את ההזמנה שהתקבלה מהשרת ב:
Order order = ClientHandler.getCommandReturn();

אם אין צורך לתשובה משמעותית מהשרת ללקוח חייבים להחזיר תשובה סתמים בפקודות כמו
return new Message("OrderUpdateSuccess", "Order has been updated successfully");

שיטה נוספת לקבל תשובה משרת בזמן שליחת בקשה:
Message response = ClientHandler.request(msg);
מחזיר את ההודעת תשובה המלאה שמתקבלת מהשרת, אם רוצים לגשת לפרמטר אפשר דרך:
response.getParam();

שיטה נוספת לקבל תשובה משרת:
Message response = ClientHandler.getLastResponse;
דוגמה ללקיחת פרמטר מתשובת שרת אם ידוע שהוא אובייקט הזמנה
Order order = (Order) response.getParam();





** working with git **

     work from terminal :

     -- run this commands --
     git clone "PROJECT URL"

     when you want to add changes to gitHub
      git a .
      git commit -m "write what you done"
      git pull origin main ( get the newest version of the project)
      git push origin main

